.ui-resizable {
    /*jquery-ui adds this class to resizable objects. 
          However, the jsplumb library requires the position to be absolute, otherwise 
          offsets will be wrong. So we need to override this here.
          see https://github.com/rwth-acis/syncmeta/issues/86
          */
    position: absolute !important;
}

.button_bar {
    width: 50%;
    float: left;
    display: flex;
    flex-wrap: wrap;
}

.main-container {
    position: relative;
}

.button_bar.left {
    text-align: left;
}

.button_bar.right {
    text-align: right;
}

.node {
    z-index: 1;
    position: absolute;
    overflow: visible;
    border: 2px solid transparent;
}

.trace_awareness {
    z-index: 0;
    position: absolute;
    overflow: visible;
    opacity: 0;
    pointer-events: none;
}

div.class_node {
    height: inherit;
    width: inherit;
    border: 1px solid #aaa;
    border-radius: 1px;
    box-shadow: 2px 2px 2px #cccccc;
    color: #666 !important;
    font-size: 12px;
}

div.default_node {
    height: inherit;
    width: inherit;
}

div.custom_node {
    height: 100%;
    width: 100%;
    position: relative;
}

div.custom_node .fill_parent {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: inherit;
    height: inherit;
}

/*adjust label of custom nodes*/
div.custom_node .fill_parent>div {
    left: 50%;
    top: -8px !important;
    -webkit-transform: translateY(-50%) translateX(-50%);
    -moz-transform: translateY(-50%) translateX(-50%);
    transform: translateY(-50%) translateX(-50%);
    pointer-events: none;
    overflow-x: auto;
}

div.simple_node {
    height: inherit;
    width: inherit;
    display: table;
}

.center .single_value_attribute .name {
    display: none;
}

.center .single_value_attribute .value .val {
    text-align: center;
}

div.simple_node div.label {
    display: table-cell;
    text-align: center;
    vertical-align: middle;
}

.box-overlay {
    position: absolute;
    background-color: #bbbbbb;
    opacity: 0;
    border-radius: 10px;
    cursor: move;
}

.selected {
    border: 3px solid #2bff6e;
}

#canvas-frame {
    overflow: hidden;
    width: 100%;
    height: 100%;
    position: relative;
    background-color: #afafaf;
}

#canvas {
    min-width: 120%;
        /* will be overwritten by style attr in the code*/
        min-height: 120%;
        /* will be overwritten by style attr in the code*/
        top: -12px;
        /* will be overwritten by style attr in the code*/
        left: -12px;
        /* will be overwritten by style attr in the code*/
    max-width: none !important;
    max-height: none !important;
    border-radius: 6px;
    position: relative !important;
    /*important because jsplumb will position according to this*/
    background: radial-gradient(#bebebe 2px, white 2px) 0 0 / 50px 50px;
    opacity: 1 !important;
    border-radius: 20px;
        border: 10px solid #000000;
}

#canvas.tool-move {
    cursor: move !important;
}

#canvas.tool-move ._jsPlumb_connector {
    cursor: pointer !important;
}

#canvas.tool-node {
    cursor: pointer !important;
}

#canvas.tool-edge {
    cursor: default !important;
}

#canvas.tool-edge.dragging {
    cursor: move !important;
}

#canvas.tool-edge .node,
#canvas.tool-node .node {
    opacity: 1;
}

#canvas.tool-edge .node {
    cursor: pointer !important;
}

#canvas.tool-edge.dragging .node {
    cursor: move !important;
}

#feedback {
    color: #777777;
}

button[disabled="disabled"],
button:disabled {
    opacity: 0.5;
}

._jsPlumb_overlay {
    font-size: 12px;
}

.class_node,
.edge_shape_node,
.node_shape_node,
.enum_node,
.abstract_class_node,
.object_node,
.relation_node {
    overflow: hidden;
}

.class_node .label,
.edge_shape_node .label,
.node_shape_node .label,
.enum_node .label,
.abstract_class_node .label,
.object_node .label,
.relation_node .label {
    border-bottom: 1px solid #999999;
}

.edge_label .single_value_attribute .name,
.label .single_value_attribute .name,
.title .single_value_attribute .name,
.name .single_value_attribute .name {
    display: none;
}

.class_node .label,
.edge_shape_node .label,
.node_shape_node .label,
.enum_node .label,
.abstract_class_node .label,
.object_node .label,
.relation_node .label {
    text-align: center;
    font-weight: bold;
    display: block;
}

.value input {
    border: 0;
    background: none;
    outline: none;
}

.edge_label {
    cursor: pointer;
}

.edge_label.fixed {
    background-color: #f5f5f5;
    width: auto;
    font-size: 14px;
}

.edge_label .single_value_attribute .value input,
.label .single_value_attribute .value input,
.title .single_value_attribute .value input,
.name .single_value_attribute .value input {
    border: 0;
    background: none;
    width: 100%;
    text-align: center;
    font-weight: bold;
    outline: none;
    margin: 2px auto;
    display: block;
}

.edge_label .single_value_attribute .value div.val {
    text-align: center;
}

.attributes .list_attribute .name {
    display: none;
}

.attributes .list_attribute ul.list {
    padding: 2px;
    margin: 0;
    list-style: none;
}

.attributes .list_attribute ul.list li.key_value_attribute,
.attributes .list_attribute ul.list li.condition_predicate,
.attributes .list_attribute ul.list li.renaming_attr {
    overflow: hidden;
}

.attributes .list_attribute ul.list li.key_value_attribute div.key {
    float: left;
    width: 50%;
}

.attributes .list_attribute ul.list li.key_value_attribute div.value {
    float: left;
    width: 50%;
}

.attributes .list_attribute ul.list li.condition_predicate div.property,
.attributes .list_attribute ul.list li.condition_predicate div.operator,
.attributes .list_attribute ul.list li.condition_predicate div.val,
.attributes .list_attribute ul.list li.condition_predicate div.operator2 {
    float: left;
    margin-left: 3px;
}

.attributes .list_attribute ul.list li.renaming_attr div.val,
.attributes .list_attribute ul.list li.renaming_attr div.ref {
    float: left;
    margin-left: 3px;
    width: 50%;
}

.attributes .list_attribute ul.list li.renaming_attr div.vis {
    float: right;
    margin-left: 3px;
}

.attributes .list_attribute ul.list li.key_value_attribute div.key input,
.attributes .list_attribute ul.list li.key_value_attribute div.value input,
.attributes .list_attribute ul.list li.condition_predicate div.val input,
.attributes .list_attribute ul.list li.renaming_attr div.val input,
.attributes .list_attribute ul.list li.renaming_attr div.ref input {
    width: 100%;
    border: 0;
    outline: none;
    background: none;
}

.attributes .single_value_attribute {
    overflow: hidden;
    margin-left: 1px;
}

.attributes .single_value_attribute .name {
    width: 50%;
    float: left;
    margin: 3px 0;
}

.attributes .single_value_attribute .value {
    width: 50%;
    float: left;
}

.attributes .single_value_attribute .value input {
    border: 0;
    color: #666 !important;
    margin: 0;
    background: none;
}

.attributes .value div.val {
    text-align: right;
    margin: 3px;
}

.attributes .value input.val {
    text-align: right;
    float: right;
}

.size-preview {
    z-index: 99;
    background-color: #ffffff;
    color: #666666;
    position: absolute;
    top: 0;
    left: 0;
    border: 1px dashed black;
}

#canvas.tool-edge .node.lowlighted,
#canvas.tool-edge .node.target {
    opacity: 0.5;
}

#canvas.tool-edge .node.source {
    opacity: 1;
}

#canvas.tool-edge.dragging .node.source {
    opacity: 0.5;
}

#canvas.tool-edge.dragging .node.source.current,
#canvas.tool-edge.dragging .node.target {
    opacity: 1;
}

#canvas.tool-edge ._jsPlumb_connector {
    opacity: 0.5;
}

#canvas.tool-edge ._jsPlumb_connector._jsPlumb_dragging {
    opacity: 1;
}

/*noinspection CssUnknownProperty*/
.type {
    position: absolute;
    bottom: 105%;
    left: 50%;
    transform: translateX(-50%);
    -o-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    text-align: center;
    overflow: visible;
    white-space: nowrap;
    color: #aaaaaa;
    font-size: 0.9em;
}

#canvas.hide_type .type {
    display: none;
}

#viewsHide {
    display: none;
}

#lblCurrentView {
    display: none;
}

.user_highlight {
    position: absolute;
    top: 100%;
    left: 0;
    font-size: 12px;
    font-weight: bold;
    white-space: nowrap;
    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
}

.jtk-endpoint {
    z-index: 300000;
}

.ghost-edge {
    opacity: 0.3;
    z-index: 30000;
}

.ghost-edge-overlay {
    z-index: 31000;
}

/* VML colors */
.object {
    background-color: rgb(213, 235, 253);
}

.nodeshape {
    background-color: rgba(213, 235, 253, 0.5);
}

.enum {
    background-color: #f9ffc6;
}

.relationship {
    background-color: #ffcece;
}

.edgeshape {
    background-color: rgba(255, 206, 206, 0.5);
}

.relation {
    background-color: #d5f5d5;
}

.abstractclass {
    background-color: #ffffff;
}

.main-container {
    position: relative;
}